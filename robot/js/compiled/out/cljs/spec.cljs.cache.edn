;; Analyzed by ClojureScript 1.9.14
{:use-macros nil, :excludes #{cat * or keys + and def}, :name cljs.spec, :imports nil, :requires {c cljs.core, cljs.core cljs.core, walk clojure.walk, clojure.walk clojure.walk, gen cljs.spec.impl.gen, cljs.spec.impl.gen cljs.spec.impl.gen, str clojure.string, clojure.string clojure.string}, :uses nil, :defs {fn-specs? {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 252, :column 8, :end-line 252, :end-column 17, :private true, :arglists (quote ([m])), :doc "Fn-specs must include at least :args or :ret specs."}, :private true, :name cljs.spec/fn-specs?, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 17, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 252, :end-line 252, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m])), :doc "Fn-specs must include at least :args or :ret specs."}, form {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 106, :column 7, :end-line 106, :end-column 11, :arglists (quote ([spec])), :doc "returns the spec as data"}, :name cljs.spec/form, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 11, :method-params ([spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 1, :fn-var true, :arglists (quote ([spec])), :doc "returns the spec as data"}, *recursion-limit* {:name cljs.spec/*recursion-limit*, :file "resources/public/js/compiled/out/cljs/spec.cljs", :line 18, :column 1, :end-line 18, :end-column 33, :dynamic true, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 18, :column 16, :end-line 18, :end-column 33, :dynamic true}, :doc "A soft limit on how many times a branching spec (or/alt/*/opt-keys/multi-spec)\n  can be recursed through during generation. After this a\n  non-recursive branch will be chosen."}, op-explain {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 806, :column 8, :end-line 806, :end-column 18, :private true, :arglists (quote ([form p path via in input]))}, :private true, :name cljs.spec/op-explain, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 18, :method-params ([form p path via in input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 806, :end-line 806, :max-fixed-arity 6, :fn-var true, :arglists (quote ([form p path via in input]))}, alt-impl {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 715, :column 19, :end-line 715, :end-column 27, :skip-wiki true, :arglists (quote ([ks ps forms])), :doc "Do not call this directly, use 'alt'"}, :name cljs.spec/alt-impl, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 27, :method-params ([ks ps forms]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 715, :end-line 715, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ks ps forms])), :doc "Do not call this directly, use 'alt'"}, ->t_cljs$spec23083 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([form mmvar retag gfn id predx dval tag meta23084])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec23083, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :method-params ([form mmvar retag gfn id predx dval tag meta23084]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 6, :factory :positional, :line 486, :max-fixed-arity 9, :fn-var true, :arglists (quote ([form mmvar retag gfn id predx dval tag meta23084])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, t_cljs$spec23292 {:num-fields 10, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec23292, :file "resources/public/js/compiled/out/cljs/spec.cljs", :type true, :anonymous true, :column 5, :line 983, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, def-impl {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 219, :column 19, :end-line 219, :end-column 27, :skip-wiki true, :arglists (quote ([k form spec])), :doc "Do not call this directly, use 'def'"}, :name cljs.spec/def-impl, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 27, :method-params ([k form spec]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 219, :end-line 219, :max-fixed-arity 3, :fn-var true, :arglists (quote ([k form spec])), :doc "Do not call this directly, use 'def'"}, unstrument* {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 334, :column 7, :end-line 334, :end-column 18, :arglists (quote ([v]))}, :name cljs.spec/unstrument*, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 18, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 334, :end-line 334, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, ->t_cljs$spec23071 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([spec-impl form pred gfn cpred? meta23072])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec23071, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :method-params ([spec-impl form pred gfn cpred? meta23072]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 459, :max-fixed-arity 6, :fn-var true, :arglists (quote ([spec-impl form pred gfn cpred? meta23072])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, regex-spec-impl {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 933, :column 19, :end-line 933, :end-column 34, :skip-wiki true, :arglists (quote ([re gfn])), :doc "Do not call this directly, use 'spec' with a regex op argument"}, :name cljs.spec/regex-spec-impl, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 34, :method-params ([re gfn]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 933, :end-line 933, :max-fixed-arity 2, :fn-var true, :arglists (quote ([re gfn])), :doc "Do not call this directly, use 'spec' with a regex op argument"}, explain-data* {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 141, :column 7, :end-line 141, :end-column 20, :arglists (quote ([spec path via in x]))}, :name cljs.spec/explain-data*, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 20, :method-params ([spec path via in x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 5, :fn-var true, :arglists (quote ([spec path via in x]))}, add-ret {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 763, :column 8, :end-line 763, :end-column 15, :private true, :arglists (quote ([p r k]))}, :private true, :name cljs.spec/add-ret, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 15, :method-params ([p r k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 763, :end-line 763, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p r k]))}, explain-pred-list {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 618, :column 8, :end-line 618, :end-column 25, :private true, :arglists (quote ([forms preds path via in x]))}, :private true, :name cljs.spec/explain-pred-list, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 25, :method-params ([forms preds path via in x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 618, :end-line 618, :max-fixed-arity 6, :fn-var true, :arglists (quote ([forms preds path via in x]))}, alt2 {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 713, :column 8, :end-line 713, :end-column 12, :private true, :arglists (quote ([p1 p2]))}, :private true, :name cljs.spec/alt2, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 12, :method-params ([p1 p2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 713, :end-line 713, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p1 p2]))}, registry-ref {:name cljs.spec/registry-ref, :file "resources/public/js/compiled/out/cljs/spec.cljs", :line 43, :column 1, :end-line 43, :end-column 32, :private true, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 43, :column 20, :end-line 43, :end-column 32, :private true}}, fn-spec-sym {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 257, :column 8, :end-line 257, :end-column 19, :private true, :arglists (quote ([sym role]))}, :private true, :name cljs.spec/fn-spec-sym, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 19, :method-params ([sym role]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 257, :end-line 257, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sym role]))}, ->t_cljs$spec23285 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([regex-spec-impl re gfn meta23286])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec23285, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :method-params ([regex-spec-impl re gfn meta23286]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 936, :max-fixed-arity 4, :fn-var true, :arglists (quote ([regex-spec-impl re gfn meta23286])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, accept? {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 650, :column 8, :end-line 650, :end-column 15, :private true, :arglists (quote ([{:keys [:cljs.spec/op]}]))}, :private true, :name cljs.spec/accept?, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 15, :method-params ([p__23163]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 650, :end-line 650, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [:cljs.spec/op]}]))}, and-spec-impl {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 629, :column 19, :end-line 629, :end-column 32, :skip-wiki true, :arglists (quote ([forms preds gfn])), :doc "Do not call this directly, use 'and'"}, :name cljs.spec/and-spec-impl, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 32, :method-params ([forms preds gfn]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 629, :end-line 629, :max-fixed-arity 3, :fn-var true, :arglists (quote ([forms preds gfn])), :doc "Do not call this directly, use 'and'"}, accept {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 648, :column 8, :end-line 648, :end-column 14, :private true, :arglists (quote ([x]))}, :private true, :name cljs.spec/accept, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 648, :end-line 648, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, recur-limit? {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 345, :column 8, :end-line 345, :end-column 20, :private true, :arglists (quote ([rmap id path k]))}, :private true, :name cljs.spec/recur-limit?, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 20, :method-params ([rmap id path k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 345, :end-line 345, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rmap id path k]))}, describe* {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 41, :column 4, :end-line 41, :end-column 13, :protocol cljs.spec/Spec, :doc nil, :arglists (quote ([spec]))}, :protocol cljs.spec/Spec, :name cljs.spec/describe*, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 13, :method-params ([spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([spec])), :doc nil}, map-spec-impl {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 379, :column 19, :end-line 379, :end-column 32, :skip-wiki true, :arglists (quote ([{:keys [req-un opt-un pred-exprs opt-keys req-specs req req-keys opt-specs pred-forms opt gfn], :as argm}])), :doc "Do not call this directly, use 'spec' with a map argument"}, :name cljs.spec/map-spec-impl, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 32, :method-params ([p__23032]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 379, :end-line 379, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [req-un opt-un pred-exprs opt-keys req-specs req req-keys opt-specs pred-forms opt gfn], :as argm}])), :doc "Do not call this directly, use 'spec' with a map argument"}, *instrument-enabled* {:meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 32, :column 26, :end-line 32, :end-column 46, :dynamic true, :private true}, :private true, :name cljs.spec/*instrument-enabled*, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 46, :column 1, :dynamic true, :line 32, :end-line 32, :doc "if false, instrumented fns call straight through"}, instrumented-vars {:name cljs.spec/instrumented-vars, :file "resources/public/js/compiled/out/cljs/spec.cljs", :line 317, :column 1, :end-line 317, :end-column 33, :private true, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 317, :column 16, :end-line 317, :end-column 33, :private true}, :doc "Map for instrumented vars to :raw/:wrapped fns"}, re-explain {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 909, :column 8, :end-line 909, :end-column 18, :private true, :arglists (quote ([path via in re input]))}, :private true, :name cljs.spec/re-explain, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 18, :method-params ([path via in re input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 909, :end-line 909, :max-fixed-arity 5, :fn-var true, :arglists (quote ([path via in re input]))}, alts {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 712, :column 8, :end-line 712, :end-column 12, :private true, :arglists (quote ([& ps])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(ps)], :arglists ([& ps]), :arglists-meta (nil)}}, :private true, :name cljs.spec/alts, :variadic true, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(ps)], :arglists ([& ps]), :arglists-meta (nil)}, :method-params [(ps)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 712, :end-line 712, :max-fixed-arity 0, :fn-var true, :arglists ([& ps])}, ->t_cljs$spec23112 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([or-spec-impl keys forms preds gfn id cform meta23113])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec23112, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :method-params ([or-spec-impl keys forms preds gfn id cform meta23113]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 580, :max-fixed-arity 8, :fn-var true, :arglists (quote ([or-spec-impl keys forms preds gfn id cform meta23113])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cljs$spec23065 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([spec-impl form pred gfn cpred? meta23066])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec23065, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :method-params ([spec-impl form pred gfn cpred? meta23066]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 459, :max-fixed-arity 6, :fn-var true, :arglists (quote ([spec-impl form pred gfn cpred? meta23066])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cljs$spec23098 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([forms preds gfn meta23099])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec23098, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :method-params ([forms preds gfn meta23099]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 523, :max-fixed-arity 4, :fn-var true, :arglists (quote ([forms preds gfn meta23099])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, with-name {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 47, :column 8, :end-line 47, :end-column 17, :private true, :arglists (quote ([spec name]))}, :private true, :name cljs.spec/with-name, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 17, :method-params ([spec name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec name]))}, explain {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 186, :column 7, :end-line 186, :end-column 14, :arglists (quote ([spec x])), :doc "Given a spec and a value that fails to conform, prints an explanation to *out*."}, :name cljs.spec/explain, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 14, :method-params ([spec x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 186, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec x])), :doc "Given a spec and a value that fails to conform, prints an explanation to *out*."}, spec-name {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 50, :column 8, :end-line 50, :end-column 17, :private true, :arglists (quote ([spec]))}, :private true, :name cljs.spec/spec-name, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 17, :method-params ([spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([spec]))}, map-spec {:name cljs.spec/map-spec, :file "resources/public/js/compiled/out/cljs/spec.cljs", :line 234, :column 1, :end-line 234, :end-column 18, :declared true, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 234, :column 10, :end-line 234, :end-column 18, :declared true}}, with-gen* {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 40, :column 4, :end-line 40, :end-column 13, :protocol cljs.spec/Spec, :doc nil, :arglists (quote ([spec gfn]))}, :protocol cljs.spec/Spec, :name cljs.spec/with-gen*, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 13, :method-params ([spec gfn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec gfn])), :doc nil}, spec-checking-fn {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 272, :column 8, :end-line 272, :end-column 24, :private true, :arglists (quote ([v f]))}, :private true, :name cljs.spec/spec-checking-fn, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 24, :method-params ([v f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 272, :end-line 272, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v f]))}, or-spec-impl {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 567, :column 19, :end-line 567, :end-column 31, :skip-wiki true, :arglists (quote ([keys forms preds gfn])), :doc "Do not call this directly, use 'or'"}, :name cljs.spec/or-spec-impl, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 31, :method-params ([keys forms preds gfn]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 567, :end-line 567, :max-fixed-arity 4, :fn-var true, :arglists (quote ([keys forms preds gfn])), :doc "Do not call this directly, use 'or'"}, specize {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 97, :column 8, :end-line 97, :end-column 15, :private true, :arglists (quote ([s]))}, :private true, :name cljs.spec/specize, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 15, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, fn-specs {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 261, :column 7, :end-line 261, :end-column 15, :arglists (quote ([v])), :doc "Returns :args/:ret/:fn map of specs for var or symbol v."}, :name cljs.spec/fn-specs, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 261, :end-line 261, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :doc "Returns :args/:ret/:fn map of specs for var or symbol v."}, *fspec-iterations* {:name cljs.spec/*fspec-iterations*, :file "resources/public/js/compiled/out/cljs/spec.cljs", :line 24, :column 1, :end-line 24, :end-column 34, :dynamic true, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 24, :column 16, :end-line 24, :end-column 34, :dynamic true}, :doc "The number of times an anonymous fn specified by fspec will be (generatively) tested during conform"}, Spec {:meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 36, :column 14, :end-line 36, :end-column 18, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {conform* [[spec x]], explain* [[spec path via in x]], gen* [[spec overrides path rmap]], with-gen* [[spec gfn]], describe* [[spec]]}}}, :protocol-symbol true, :name cljs.spec/Spec, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 18, :column 1, :line 36, :protocol-info {:methods {conform* [[spec x]], explain* [[spec path via in x]], gen* [[spec overrides path rmap]], with-gen* [[spec gfn]], describe* [[spec]]}}, :info nil, :end-line 36, :impls #{cljs.spec/t_cljs$spec23035 cljs.spec/t_cljs$spec23048 cljs.spec/t_cljs$spec23098 cljs.spec/t_cljs$spec23281 cljs.spec/t_cljs$spec23065 cljs.spec/t_cljs$spec23112 cljs.spec/t_cljs$spec23071 cljs.spec/t_cljs$spec23299 cljs.spec/t_cljs$spec23108 cljs.spec/t_cljs$spec23083 cljs.spec/t_cljs$spec23292 cljs.spec/t_cljs$spec23155 cljs.spec/t_cljs$spec23285 cljs.spec/t_cljs$spec23159}, :doc nil, :jsdoc ("@interface")}, valid? {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 365, :column 7, :end-line 365, :end-column 13, :arglists (quote ([spec x] [spec x form])), :doc "Helper function that returns true when x is valid for spec.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([spec x] [spec x form]), :arglists ([spec x] [spec x form]), :arglists-meta (nil nil)}}, :name cljs.spec/valid?, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([spec x] [spec x form]), :arglists ([spec x] [spec x form]), :arglists-meta (nil nil)}, :method-params ([spec x] [spec x form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 365, :end-line 365, :max-fixed-arity 3, :fn-var true, :arglists ([spec x] [spec x form]), :doc "Helper function that returns true when x is valid for spec."}, t_cljs$spec23035 {:num-fields 20, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec23035, :file "resources/public/js/compiled/out/cljs/spec.cljs", :type true, :anonymous true, :column 5, :line 387, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, coll-checker {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 1030, :column 7, :end-line 1030, :end-column 19, :arglists (quote ([pred])), :doc "returns a predicate function that checks *coll-check-limit* items in a collection with pred"}, :name cljs.spec/coll-checker, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 19, :method-params ([pred]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1030, :end-line 1030, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pred])), :doc "returns a predicate function that checks *coll-check-limit* items in a collection with pred"}, t_cljs$spec23155 {:num-fields 5, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec23155, :file "resources/public/js/compiled/out/cljs/spec.cljs", :type true, :anonymous true, :column 3, :line 632, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, t_cljs$spec23112 {:num-fields 8, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec23112, :file "resources/public/js/compiled/out/cljs/spec.cljs", :type true, :anonymous true, :column 5, :line 580, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, gen {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 207, :column 7, :end-line 207, :end-column 10, :arglists (quote ([spec] [spec overrides])), :doc "Given a spec, returns the generator for it, or throws if none can\n  be constructed. Optionally an overrides map can be provided which\n  should map paths (vectors of keywords) to generators. These will be\n  used instead of the generators at those paths. Note that parent\n  generator (in the spec or overrides map) will supersede those of any\n  subtrees. A generator for a regex op must always return a\n  sequential collection (i.e. a generator for s/? should return either\n  an empty sequence/vector or a sequence/vector with one item in it)", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([spec] [spec overrides]), :arglists ([spec] [spec overrides]), :arglists-meta (nil nil)}}, :name cljs.spec/gen, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([spec] [spec overrides]), :arglists ([spec] [spec overrides]), :arglists-meta (nil nil)}, :method-params ([spec] [spec overrides]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 207, :end-line 207, :max-fixed-arity 2, :fn-var true, :arglists ([spec] [spec overrides]), :doc "Given a spec, returns the generator for it, or throws if none can\n  be constructed. Optionally an overrides map can be provided which\n  should map paths (vectors of keywords) to generators. These will be\n  used instead of the generators at those paths. Note that parent\n  generator (in the spec or overrides map) will supersede those of any\n  subtrees. A generator for a regex op must always return a\n  sequential collection (i.e. a generator for s/? should return either\n  an empty sequence/vector or a sequence/vector with one item in it)"}, fn-spec-roles {:name cljs.spec/fn-spec-roles, :file "resources/public/js/compiled/out/cljs/spec.cljs", :line 238, :column 1, :end-line 238, :end-column 29, :private true, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 238, :column 16, :end-line 238, :end-column 29, :private true}}, ->sym {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 245, :column 8, :end-line 245, :end-column 13, :private true, :arglists (quote ([x])), :doc "Returns a symbol from a symbol or var"}, :private true, :name cljs.spec/->sym, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns a symbol from a symbol or var"}, abbrev {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 112, :column 7, :end-line 112, :end-column 13, :arglists (quote ([form]))}, :name cljs.spec/abbrev, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 13, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, t_cljs$spec23083 {:num-fields 9, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec23083, :file "resources/public/js/compiled/out/cljs/spec.cljs", :type true, :anonymous true, :column 6, :line 486, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, regex? {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 71, :column 7, :end-line 71, :end-column 13, :arglists (quote ([x])), :doc "returns x if x is a (clojure.spec) regex op, else logical false"}, :name cljs.spec/regex?, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "returns x if x is a (clojure.spec) regex op, else logical false"}, expect {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 240, :column 8, :end-line 240, :end-column 14, :private true, :arglists (quote ([spec v])), :doc "Returns nil if v conforms to spec, else throws ex-info with explain-data."}, :private true, :name cljs.spec/expect, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 14, :method-params ([spec v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 240, :end-line 240, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec v])), :doc "Returns nil if v conforms to spec, else throws ex-info with explain-data."}, t_cljs$spec23299 {:num-fields 10, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec23299, :file "resources/public/js/compiled/out/cljs/spec.cljs", :type true, :anonymous true, :column 5, :line 983, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, dt {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 352, :column 8, :end-line 352, :end-column 10, :private true, :arglists (quote ([pred x form] [pred x form cpred?])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([pred x form] [pred x form cpred?]), :arglists ([pred x form] [pred x form cpred?]), :arglists-meta (nil nil)}}, :private true, :name cljs.spec/dt, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([pred x form] [pred x form cpred?]), :arglists ([pred x form] [pred x form cpred?]), :arglists-meta (nil nil)}, :method-params ([pred x form] [pred x form cpred?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 352, :end-line 352, :max-fixed-arity 4, :fn-var true, :arglists ([pred x form] [pred x form cpred?])}, preturn {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 748, :column 8, :end-line 748, :end-column 15, :private true, :arglists (quote ([p]))}, :private true, :name cljs.spec/preturn, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 15, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 748, :end-line 748, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, re-conform {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 896, :column 8, :end-line 896, :end-column 18, :private true, :arglists (quote ([p [x & xs :as data]]))}, :private true, :name cljs.spec/re-conform, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 18, :method-params ([p p__23265]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 896, :end-line 896, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p [x & xs :as data]]))}, t_cljs$spec23159 {:num-fields 5, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec23159, :file "resources/public/js/compiled/out/cljs/spec.cljs", :type true, :anonymous true, :column 3, :line 632, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, spec? {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 66, :column 7, :end-line 66, :end-column 12, :arglists (quote ([x])), :doc "returns x if x is a spec object, else logical false"}, :name cljs.spec/spec?, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "returns x if x is a spec object, else logical false"}, named? {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 45, :column 8, :end-line 45, :end-column 14, :private true, :arglists (quote ([x]))}, :private true, :name cljs.spec/named?, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, registry {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 229, :column 7, :end-line 229, :end-column 15, :arglists (quote ([])), :doc "returns the registry map"}, :name cljs.spec/registry, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 229, :end-line 229, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "returns the registry map"}, rep+impl {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 681, :column 19, :end-line 681, :end-column 27, :skip-wiki true, :arglists (quote ([form p])), :doc "Do not call this directly, use '+'"}, :name cljs.spec/rep+impl, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 27, :method-params ([form p]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 681, :end-line 681, :max-fixed-arity 2, :fn-var true, :arglists (quote ([form p])), :doc "Do not call this directly, use '+'"}, deriv {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 776, :column 8, :end-line 776, :end-column 13, :private true, :arglists (quote ([p x]))}, :private true, :name cljs.spec/deriv, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 13, :method-params ([p x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 776, :end-line 776, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p x]))}, ->t_cljs$spec23155 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([and-spec-impl forms preds gfn meta23156])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec23155, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :method-params ([and-spec-impl forms preds gfn meta23156]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 632, :max-fixed-arity 5, :fn-var true, :arglists (quote ([and-spec-impl forms preds gfn meta23156])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, t_cljs$spec23285 {:num-fields 4, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec23285, :file "resources/public/js/compiled/out/cljs/spec.cljs", :type true, :anonymous true, :column 3, :line 936, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, exercise {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 1021, :column 7, :end-line 1021, :end-column 15, :arglists (quote ([spec] [spec n] [spec n overrides])), :doc "generates a number (default 10) of values compatible with spec and maps conform over them,\n  returning a sequence of [val conformed-val] tuples. Optionally takes\n  a generator overrides map as per gen", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([spec] [spec n] [spec n overrides]), :arglists ([spec] [spec n] [spec n overrides]), :arglists-meta (nil nil nil)}}, :name cljs.spec/exercise, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([spec] [spec n] [spec n overrides]), :arglists ([spec] [spec n] [spec n overrides]), :arglists-meta (nil nil nil)}, :method-params ([spec] [spec n] [spec n overrides]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 1021, :end-line 1021, :max-fixed-arity 3, :fn-var true, :arglists ([spec] [spec n] [spec n overrides]), :doc "generates a number (default 10) of values compatible with spec and maps conform over them,\n  returning a sequence of [val conformed-val] tuples. Optionally takes\n  a generator overrides map as per gen"}, explain-data {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 145, :column 7, :end-line 145, :end-column 19, :arglists (quote ([spec x])), :doc "Given a spec and a value x which ought to conform, returns nil if x\n  conforms, else a map with at least the key ::problems whose value is\n  a path->problem-map, where problem-map has at least :pred and :val\n  keys describing the predicate and the value that failed at that\n  path."}, :name cljs.spec/explain-data, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 19, :method-params ([spec x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec x])), :doc "Given a spec and a value x which ought to conform, returns nil if x\n  conforms, else a map with at least the key ::problems whose value is\n  a path->problem-map, where problem-map has at least :pred and :val\n  keys describing the predicate and the value that failed at that\n  path."}, tuple-impl {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 519, :column 19, :end-line 519, :end-column 29, :skip-wiki true, :arglists (quote ([forms preds] [forms preds gfn])), :doc "Do not call this directly, use 'tuple'", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([forms preds] [forms preds gfn]), :arglists ([forms preds] [forms preds gfn]), :arglists-meta (nil nil)}}, :name cljs.spec/tuple-impl, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 29, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([forms preds] [forms preds gfn]), :arglists ([forms preds] [forms preds gfn]), :arglists-meta (nil nil)}, :method-params ([forms preds] [forms preds gfn]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 519, :end-line 519, :max-fixed-arity 3, :fn-var true, :arglists ([forms preds] [forms preds gfn]), :doc "Do not call this directly, use 'tuple'"}, instrument* {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 321, :column 7, :end-line 321, :end-column 18, :arglists (quote ([v]))}, :name cljs.spec/instrument*, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 18, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 321, :end-line 321, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, ->t_cljs$spec23299 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([fspec-impl argspec aform retspec rform fnspec fform gfn specs meta23300])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec23299, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :method-params ([fspec-impl argspec aform retspec rform fnspec fform gfn specs meta23300]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 983, :max-fixed-arity 10, :fn-var true, :arglists (quote ([fspec-impl argspec aform retspec rform fnspec fform gfn specs meta23300])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, multi-spec-impl {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 473, :column 19, :end-line 473, :end-column 34, :skip-wiki true, :arglists (quote ([form mmvar retag] [form mmvar retag gfn])), :doc "Do not call this directly, use 'multi-spec'", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([form mmvar retag] [form mmvar retag gfn]), :arglists ([form mmvar retag] [form mmvar retag gfn]), :arglists-meta (nil nil)}}, :name cljs.spec/multi-spec-impl, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 34, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([form mmvar retag] [form mmvar retag gfn]), :arglists ([form mmvar retag] [form mmvar retag gfn]), :arglists-meta (nil nil)}, :method-params ([form mmvar retag] [form mmvar retag gfn]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 473, :end-line 473, :max-fixed-arity 4, :fn-var true, :arglists ([form mmvar retag] [form mmvar retag gfn]), :doc "Do not call this directly, use 'multi-spec'"}, conform {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 100, :column 7, :end-line 100, :end-column 14, :arglists (quote ([spec x])), :doc "Given a spec and a value, returns :clojure.spec/invalid if value does not match spec,\n  else the (possibly destructured) value."}, :name cljs.spec/conform, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 14, :method-params ([spec x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec x])), :doc "Given a spec and a value, returns :clojure.spec/invalid if value does not match spec,\n  else the (possibly destructured) value."}, gen* {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 39, :column 4, :end-line 39, :end-column 8, :protocol cljs.spec/Spec, :doc nil, :arglists (quote ([spec overrides path rmap]))}, :protocol cljs.spec/Spec, :name cljs.spec/gen*, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 8, :method-params ([spec overrides path rmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 39, :max-fixed-arity 4, :fn-var true, :arglists (quote ([spec overrides path rmap])), :doc nil}, fspec-impl {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 978, :column 19, :end-line 978, :end-column 29, :skip-wiki true, :arglists (quote ([argspec aform retspec rform fnspec fform gfn])), :doc "Do not call this directly, use 'fspec'"}, :name cljs.spec/fspec-impl, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 29, :method-params ([argspec aform retspec rform fnspec fform gfn]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 978, :end-line 978, :max-fixed-arity 7, :fn-var true, :arglists (quote ([argspec aform retspec rform fnspec fform gfn])), :doc "Do not call this directly, use 'fspec'"}, t_cljs$spec23048 {:num-fields 20, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec23048, :file "resources/public/js/compiled/out/cljs/spec.cljs", :type true, :anonymous true, :column 5, :line 387, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, inck {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 349, :column 8, :end-line 349, :end-column 12, :private true, :arglists (quote ([m k]))}, :private true, :name cljs.spec/inck, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 12, :method-params ([m k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 349, :end-line 349, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m k]))}, t_cljs$spec23098 {:num-fields 4, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec23098, :file "resources/public/js/compiled/out/cljs/spec.cljs", :type true, :anonymous true, :column 4, :line 523, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, *coll-check-limit* {:name cljs.spec/*coll-check-limit*, :file "resources/public/js/compiled/out/cljs/spec.cljs", :line 28, :column 1, :end-line 28, :end-column 34, :dynamic true, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 28, :column 16, :end-line 28, :end-column 34, :dynamic true}, :doc "The number of items validated in a collection spec'ed with 'coll'"}, gensub {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 198, :column 8, :end-line 198, :end-column 14, :private true, :arglists (quote ([spec overrides path rmap form]))}, :private true, :name cljs.spec/gensub, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 14, :method-params ([spec overrides path rmap form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 5, :fn-var true, :arglists (quote ([spec overrides path rmap form]))}, the-spec {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 90, :column 8, :end-line 90, :end-column 16, :private true, :arglists (quote ([spec-or-k])), :doc "spec-or-k must be a spec, regex or kw/sym, else returns nil. Throws if unresolvable kw/sym"}, :private true, :name cljs.spec/the-spec, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 16, :method-params ([spec-or-k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([spec-or-k])), :doc "spec-or-k must be a spec, regex or kw/sym, else returns nil. Throws if unresolvable kw/sym"}, t_cljs$spec23281 {:num-fields 4, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec23281, :file "resources/public/js/compiled/out/cljs/spec.cljs", :type true, :anonymous true, :column 3, :line 936, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, accept-nil? {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 731, :column 8, :end-line 731, :end-column 19, :private true, :arglists (quote ([p]))}, :private true, :name cljs.spec/accept-nil?, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 19, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 731, :end-line 731, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, maybe-spec {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 79, :column 8, :end-line 79, :end-column 18, :private true, :arglists (quote ([spec-or-k])), :doc "spec-or-k must be a spec, regex or resolvable kw/sym, else returns nil."}, :private true, :name cljs.spec/maybe-spec, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 18, :method-params ([spec-or-k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([spec-or-k])), :doc "spec-or-k must be a spec, regex or resolvable kw/sym, else returns nil."}, spec-impl {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 451, :column 19, :end-line 451, :end-column 28, :skip-wiki true, :arglists (quote ([form pred gfn cpred?])), :doc "Do not call this directly, use 'spec'"}, :name cljs.spec/spec-impl, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 28, :method-params ([form pred gfn cpred?]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 451, :end-line 451, :max-fixed-arity 4, :fn-var true, :arglists (quote ([form pred gfn cpred?])), :doc "Do not call this directly, use 'spec'"}, coll-gen {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 1040, :column 7, :end-line 1040, :end-column 15, :arglists (quote ([pred init-coll])), :doc "returns a function of no args that returns a generator of\n  collections of items conforming to pred, with the same shape as\n  init-coll"}, :name cljs.spec/coll-gen, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 15, :method-params ([pred init-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1040, :end-line 1040, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred init-coll])), :doc "returns a function of no args that returns a generator of\n  collections of items conforming to pred, with the same shape as\n  init-coll"}, ->t_cljs$spec23048 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([opt map-spec-impl req-un opt-un gfn pred-exprs keys-pred argm opt-keys req-specs keys->specs map__23046 req id req-keys opt-specs k->s p__23032 pred-forms meta23049])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec23048, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :method-params ([opt map-spec-impl req-un opt-un gfn pred-exprs keys-pred argm opt-keys req-specs keys->specs map__23046 req id req-keys opt-specs k->s p__23032 pred-forms meta23049]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 387, :max-fixed-arity 20, :fn-var true, :arglists (quote ([opt map-spec-impl req-un opt-un gfn pred-exprs keys-pred argm opt-keys req-specs keys->specs map__23046 req id req-keys opt-specs k->s p__23032 pred-forms meta23049])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, amp-impl {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 686, :column 19, :end-line 686, :end-column 27, :skip-wiki true, :arglists (quote ([re preds pred-forms])), :doc "Do not call this directly, use '&'"}, :name cljs.spec/amp-impl, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 27, :method-params ([re preds pred-forms]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 686, :end-line 686, :max-fixed-arity 3, :fn-var true, :arglists (quote ([re preds pred-forms])), :doc "Do not call this directly, use '&'"}, pcat* {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 653, :column 8, :end-line 653, :end-column 13, :private true, :arglists (quote ([{[p1 & pr :as ps] :ps, [k1 & kr :as ks] :ks, [f1 & fr :as forms] :forms, ret :ret, rep+ :rep+}]))}, :private true, :name cljs.spec/pcat*, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 13, :method-params ([p__23168]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 653, :end-line 653, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{[p1 & pr :as ps] :ps, [k1 & kr :as ks] :ks, [f1 & fr :as forms] :forms, ret :ret, rep+ :rep+}]))}, alt* {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 700, :column 8, :end-line 700, :end-column 12, :private true, :arglists (quote ([ps ks forms]))}, :private true, :name cljs.spec/alt*, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 12, :method-params ([ps ks forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 700, :end-line 700, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ps ks forms]))}, cat-impl {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 665, :column 19, :end-line 665, :end-column 27, :skip-wiki true, :arglists (quote ([ks ps forms])), :doc "Do not call this directly, use 'cat'"}, :name cljs.spec/cat-impl, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 27, :method-params ([ks ps forms]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 665, :end-line 665, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ks ps forms])), :doc "Do not call this directly, use 'cat'"}, reg-resolve {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 54, :column 8, :end-line 54, :end-column 19, :private true, :arglists (quote ([k])), :doc "returns the spec/regex at end of alias chain starting with k, nil if not found, k if k not Named"}, :private true, :name cljs.spec/reg-resolve, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 19, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k])), :doc "returns the spec/regex at end of alias chain starting with k, nil if not found, k if k not Named"}, explain-str {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 191, :column 7, :end-line 191, :end-column 18, :arglists (quote ([spec x])), :doc "Given a spec and a value that fails to conform, returns an explanation as a string."}, :name cljs.spec/explain-str, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 18, :method-params ([spec x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 191, :end-line 191, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec x])), :doc "Given a spec and a value that fails to conform, returns an explanation as a string."}, ->t_cljs$spec23281 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([regex-spec-impl re gfn meta23282])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec23281, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :method-params ([regex-spec-impl re gfn meta23282]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 936, :max-fixed-arity 4, :fn-var true, :arglists (quote ([regex-spec-impl re gfn meta23282])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cljs$spec23159 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([and-spec-impl forms preds gfn meta23160])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec23159, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :method-params ([and-spec-impl forms preds gfn meta23160]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 632, :max-fixed-arity 5, :fn-var true, :arglists (quote ([and-spec-impl forms preds gfn meta23160])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, with-gen {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 136, :column 7, :end-line 136, :end-column 15, :arglists (quote ([spec gen-fn])), :doc "Takes a spec and a no-arg, generator-returning fn and returns a version of that spec that uses that generator"}, :name cljs.spec/with-gen, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 15, :method-params ([spec gen-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec gen-fn])), :doc "Takes a spec and a no-arg, generator-returning fn and returns a version of that spec that uses that generator"}, conform* {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 37, :column 4, :end-line 37, :end-column 12, :protocol cljs.spec/Spec, :doc nil, :arglists (quote ([spec x]))}, :protocol cljs.spec/Spec, :name cljs.spec/conform*, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 12, :method-params ([spec x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec x])), :doc nil}, t_cljs$spec23071 {:num-fields 6, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec23071, :file "resources/public/js/compiled/out/cljs/spec.cljs", :type true, :anonymous true, :column 5, :line 459, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, noret? {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 723, :column 8, :end-line 723, :end-column 14, :private true, :arglists (quote ([p1 pret]))}, :private true, :name cljs.spec/noret?, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 14, :method-params ([p1 pret]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 723, :end-line 723, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p1 pret]))}, rep-impl {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 677, :column 19, :end-line 677, :end-column 27, :skip-wiki true, :arglists (quote ([form p])), :doc "Do not call this directly, use '*'"}, :name cljs.spec/rep-impl, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 27, :method-params ([form p]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 677, :end-line 677, :max-fixed-arity 2, :fn-var true, :arglists (quote ([form p])), :doc "Do not call this directly, use '*'"}, op-describe {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 792, :column 8, :end-line 792, :end-column 19, :private true, :arglists (quote ([p]))}, :private true, :name cljs.spec/op-describe, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 19, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 792, :end-line 792, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, describe {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 131, :column 7, :end-line 131, :end-column 15, :arglists (quote ([spec])), :doc "returns an abbreviated description of the spec as data"}, :name cljs.spec/describe, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 15, :method-params ([spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 1, :fn-var true, :arglists (quote ([spec])), :doc "returns an abbreviated description of the spec as data"}, ->t_cljs$spec23035 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([opt map-spec-impl req-un opt-un gfn map__23033 pred-exprs keys-pred argm opt-keys req-specs keys->specs req id req-keys opt-specs k->s p__23032 pred-forms meta23036])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec23035, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :method-params ([opt map-spec-impl req-un opt-un gfn map__23033 pred-exprs keys-pred argm opt-keys req-specs keys->specs req id req-keys opt-specs k->s p__23032 pred-forms meta23036]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 387, :max-fixed-arity 20, :fn-var true, :arglists (quote ([opt map-spec-impl req-un opt-un gfn map__23033 pred-exprs keys-pred argm opt-keys req-specs keys->specs req id req-keys opt-specs k->s p__23032 pred-forms meta23036])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, explain-1 {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 372, :column 8, :end-line 372, :end-column 17, :private true, :arglists (quote ([form pred path via in v]))}, :private true, :name cljs.spec/explain-1, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 17, :method-params ([form pred path via in v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 372, :end-line 372, :max-fixed-arity 6, :fn-var true, :arglists (quote ([form pred path via in v]))}, explain-out {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 154, :column 8, :end-line 154, :end-column 19, :private true, :arglists (quote ([ed])), :doc "prints an explanation to *out*."}, :private true, :name cljs.spec/explain-out, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 19, :method-params ([ed]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ed])), :doc "prints an explanation to *out*."}, re-gen {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 860, :column 8, :end-line 860, :end-column 14, :private true, :arglists (quote ([p overrides path rmap f]))}, :private true, :name cljs.spec/re-gen, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 14, :method-params ([p overrides path rmap f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 860, :end-line 860, :max-fixed-arity 5, :fn-var true, :arglists (quote ([p overrides path rmap f]))}, filter-alt {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 691, :column 8, :end-line 691, :end-column 18, :private true, :arglists (quote ([ps ks forms f]))}, :private true, :name cljs.spec/filter-alt, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 18, :method-params ([ps ks forms f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 691, :end-line 691, :max-fixed-arity 4, :fn-var true, :arglists (quote ([ps ks forms f]))}, and-preds {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 606, :column 8, :end-line 606, :end-column 17, :private true, :arglists (quote ([x preds forms]))}, :private true, :name cljs.spec/and-preds, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 17, :method-params ([x preds forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 606, :end-line 606, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x preds forms]))}, no-fn-specs {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 312, :column 8, :end-line 312, :end-column 19, :private true, :arglists (quote ([v specs]))}, :private true, :name cljs.spec/no-fn-specs, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 19, :method-params ([v specs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 312, :end-line 312, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v specs]))}, call-valid? {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 957, :column 8, :end-line 957, :end-column 19, :private true, :arglists (quote ([f specs args]))}, :private true, :name cljs.spec/call-valid?, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 19, :method-params ([f specs args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 957, :end-line 957, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f specs args]))}, rep* {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 670, :column 8, :end-line 670, :end-column 12, :private true, :arglists (quote ([p1 p2 ret splice form]))}, :private true, :name cljs.spec/rep*, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 12, :method-params ([p1 p2 ret splice form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 670, :end-line 670, :max-fixed-arity 5, :fn-var true, :arglists (quote ([p1 p2 ret splice form]))}, ->t_cljs$spec23292 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([fspec-impl argspec aform retspec rform fnspec fform gfn specs meta23293])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec23292, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :method-params ([fspec-impl argspec aform retspec rform fnspec fform gfn specs meta23293]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 983, :max-fixed-arity 10, :fn-var true, :arglists (quote ([fspec-impl argspec aform retspec rform fnspec fform gfn specs meta23293])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, t_cljs$spec23108 {:num-fields 8, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec23108, :file "resources/public/js/compiled/out/cljs/spec.cljs", :type true, :anonymous true, :column 5, :line 580, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, maybe-impl {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 719, :column 19, :end-line 719, :end-column 29, :skip-wiki true, :arglists (quote ([p form])), :doc "Do not call this directly, use '?'"}, :name cljs.spec/maybe-impl, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 29, :method-params ([p form]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 719, :end-line 719, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p form])), :doc "Do not call this directly, use '?'"}, pcat {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 663, :column 8, :end-line 663, :end-column 12, :private true, :arglists (quote ([& ps])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(ps)], :arglists ([& ps]), :arglists-meta (nil)}}, :private true, :name cljs.spec/pcat, :variadic true, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(ps)], :arglists ([& ps]), :arglists-meta (nil)}, :method-params [(ps)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 663, :end-line 663, :max-fixed-arity 0, :fn-var true, :arglists ([& ps])}, explain* {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 38, :column 4, :end-line 38, :end-column 12, :protocol cljs.spec/Spec, :doc nil, :arglists (quote ([spec path via in x]))}, :protocol cljs.spec/Spec, :name cljs.spec/explain*, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 12, :method-params ([spec path via in x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 38, :max-fixed-arity 5, :fn-var true, :arglists (quote ([spec path via in x])), :doc nil}, t_cljs$spec23065 {:num-fields 6, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec23065, :file "resources/public/js/compiled/out/cljs/spec.cljs", :type true, :anonymous true, :column 5, :line 459, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cljs$spec23108 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([or-spec-impl keys forms preds gfn id cform meta23109])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec23108, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :method-params ([or-spec-impl keys forms preds gfn id cform meta23109]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 580, :max-fixed-arity 8, :fn-var true, :arglists (quote ([or-spec-impl keys forms preds gfn id cform meta23109])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, validate-fn {:protocol-inline nil, :meta {:file "/Users/erik/Documents/github.com/robo-walk/resources/public/js/compiled/out/cljs/spec.cljs", :line 968, :column 8, :end-line 968, :end-column 19, :private true, :arglists (quote ([f specs iters])), :doc "returns f if valid, else smallest"}, :private true, :name cljs.spec/validate-fn, :variadic false, :file "resources/public/js/compiled/out/cljs/spec.cljs", :end-column 19, :method-params ([f specs iters]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 968, :end-line 968, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f specs iters])), :doc "returns f if valid, else smallest"}}, :require-macros {c cljs.core, cljs.core cljs.core, s cljs.spec, cljs.spec cljs.spec, gen cljs.spec.impl.gen, cljs.spec.impl.gen cljs.spec.impl.gen}, :cljs.analyzer/constants {:seen #{form tag :args :req-un :opt-un cljs.spec/keys :cljs.spec/invalid cljs.spec/spec :p2 :ret :gfn fn? meta23066 meta23113 :pred-exprs vector? map :shrunk :fn regex-spec-impl predx :rep+ :cljs.spec/amp cljs.core/= :opt-keys aform meta23072 :pred dval :splice and-spec-impl forms opt argspec :else :gen :cljs.spec/k map-spec-impl :ks cljs.core/count req-un opt-un :cljs.spec/args :_ :raw :via meta23293 :as zipmap meta23084 meta23300 :req-specs gfn map__23033 fnspec cljs.spec/multi-spec map? pred-exprs keys-pred cpred? or-spec-impl argm fn :val fform opt-keys pred meta23099 meta23286 :cljs.spec/alt meta23036 :skip-wiki :p1 cljs.core/zipmap :cljs.spec/nil % :cljs.spec/pcat cljs.core/map cljs.spec/conformer method req-specs meta23109 cljs.spec/* re :reason preds cljs.spec/+ :req cljs.core/constantly :cljs.spec/name :cljs.spec/unknown :keys :cljs.spec/recursion-limit s/and meta23160 :var fn* cljs.spec/alt :id fspec-impl :cljs.spec/rep :smallest :specs keys->specs mmvar map__23046 :req-keys retag :cljs.spec/any retspec :cljs.spec/accept :opt-specs meta23156 meta23282 cljs.spec/cat rform :pred-forms req meta23049 keys spec-impl cljs.spec/or quote :arglists id p1__23311# cljs.spec/fspec :doc specs cljs.spec/tuple req-keys apply :cljs.spec/op :cljs.spec/v cform :wrapped clojure.spec/& opt-specs :cljs.spec/problems :forms :ps k->s :cljs.spec/kvs->map :in :accept p__23032 :opt cljs.spec.impl.gen/any pred-forms}, :order [:cljs.spec/name :cljs.spec/op :cljs.spec/unknown fn % :else :cljs.spec/problems :pred :val :reason :via :in :cljs.spec/recursion-limit :args :ret :fn :cljs.spec/invalid :cljs.spec/args :var :specs :raw :wrapped :opt :req-un :opt-un :gfn :pred-exprs :opt-keys :req-specs :req :req-keys :opt-specs :pred-forms map? cljs.spec/keys opt map-spec-impl :skip-wiki :arglists :doc quote :keys :as req-un opt-un pred-exprs opt-keys req-specs req req-keys opt-specs pred-forms gfn argm map__23033 keys-pred keys->specs id k->s p__23032 meta23036 map__23046 meta23049 spec-impl form pred cpred? meta23066 meta23072 method cljs.spec/multi-spec mmvar retag predx dval tag meta23084 vector? cljs.core/= cljs.core/count cljs.spec/tuple forms preds meta23099 cljs.spec/or or-spec-impl keys cform meta23109 meta23113 s/and and-spec-impl meta23156 meta23160 :cljs.spec/accept :ps :ks :forms :rep+ :cljs.spec/pcat :p2 :splice :id :cljs.spec/rep :p1 cljs.spec/* :cljs.spec/amp :cljs.spec/alt :cljs.spec/nil clojure.spec/& cljs.spec/+ cljs.spec/cat :_ cljs.spec/alt :accept regex-spec-impl re meta23282 meta23286 :smallest :shrunk apply fn? cljs.spec/fspec fspec-impl argspec aform retspec rform fnspec fform specs meta23293 meta23300 :cljs.spec/any cljs.spec/spec cljs.core/constantly :gen cljs.spec.impl.gen/any :cljs.spec/kvs->map cljs.spec/conformer fn* p1__23311# cljs.core/zipmap cljs.core/map :cljs.spec/k :cljs.spec/v zipmap map]}, :doc nil}